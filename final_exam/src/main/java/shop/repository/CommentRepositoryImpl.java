package shop.repository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;
import shop.model.Comment;
import shop.modelviews.CommentMapper;

import java.sql.PreparedStatement;
import java.sql.Statement;
import java.util.List;

@Repository
public class CommentRepositoryImpl implements CommentRepository {

	@Autowired
	private JdbcTemplate jdbcTemplate;

	@Override
	public List<Comment> findCommentsByNewsId(int newsId) {
		String sql = "SELECT c.*, u.name AS user_name " + "FROM tbl_comment c " + "JOIN tbl_user u ON c.user_id = u.id "
				+ "WHERE c.news_id = ?";
		return jdbcTemplate.query(sql, new Object[] { newsId }, new CommentMapper());
	}

	@Override
	public void addComment(Comment comment) {
		String sql = "INSERT INTO tbl_comment (user_id, news_id, content, created_at) VALUES (?, ?, ?, ?)";

		KeyHolder keyHolder = new GeneratedKeyHolder();

		jdbcTemplate.update(connection -> {
			PreparedStatement ps = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			ps.setInt(1, comment.getUserId());
			ps.setInt(2, comment.getNewsId());
			ps.setString(3, comment.getContent());
			ps.setDate(4, comment.getCreatedAt());
			return ps;
		}, keyHolder);

		// Set ID generated by the database back to the Comment object
		if (keyHolder.getKey() != null) {
			comment.setId(keyHolder.getKey().intValue());
		}
	}

	@Override
	public void deleteComment(int commentId) {
		String sql = "DELETE FROM tbl_comment WHERE id = ?";
		jdbcTemplate.update(sql, commentId);
	}

	@Override
	public void updateComment(Comment comment) {
		String sql = "UPDATE tbl_comment SET content = ?, created_at = ? WHERE id = ?";
		jdbcTemplate.update(sql, comment.getContent(), comment.getCreatedAt(), comment.getId());
	}

	@Override
	public int countCommentsByNewsId(int newsId) {
		String sql = "SELECT COUNT(*) FROM tbl_comment WHERE news_id = ?";
		return jdbcTemplate.queryForObject(sql, new Object[] { newsId }, Integer.class);
	}
	@Override
	public Comment findCommentById(int commentId) {
	    String sql = "SELECT * FROM tbl_comment WHERE id = ?";
	    List<Comment> comments = jdbcTemplate.query(sql, new Object[]{commentId}, new CommentMapper());
	    return comments.isEmpty() ? null : comments.get(0);
	}


}
